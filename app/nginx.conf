
map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}

server {
  listen 80;
  server_name localhost;

  # Path for static files
  root /usr/share/nginx/html;

  client_max_body_size 1G;

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # favicon.ico is in images/ dir for tidyness.

  location = /favicon.ico {
    root /usr/share/nginx/html/images;
  }

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # Old route redirects...

  rewrite ^/dojo/index(.*)       /creator/home        permanent;
  rewrite ^/individual/show/(.*) /creator/enter?id=$1 permanent;
  rewrite ^/group/show/(.*)      /creator/enter?id=$1 permanent;
  rewrite ^/kata/group/(.*)      /creator/enter?id=$1 permanent;
  rewrite ^/id_join/show/(.*)    /creator/enter?id=$1 permanent;
  rewrite ^/id_rejoin/show/(.*)  /creator/enter?id=$1 permanent;
  rewrite ^/id_review/show/(.*)  /creator/enter?id=$1 permanent;

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # Deprecated routes

  location /setup_custom_start_point/save_group_json {
    rewrite ^/setup_custom_start_point/save_group_json /deprecated_group_create_custom break;
    proxy_pass http://creator:4523;
  }
  location /setup_custom_start_point/save_individual_json {
    rewrite ^/setup_custom_start_point/save_individual_json /deprecated_kata_create_custom  break;
    proxy_pass http://creator:4523;
  }

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # Pages to create an exercise

  location /creator/ {
    rewrite ^/creator/(.*) /$1 break;
    proxy_pass http://creator:4523;
  }

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # avatars names and images (jpg)

  location /avatars/ {
    rewrite ^/avatars/(.*) /$1 break;
    proxy_pass http://avatars:5027;
  }

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # Read-Eval-Print-Loop service (uses web-sockets)

  location /repler/ {
    proxy_pass http://repler:4657/repl/;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
  }

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # The shas service is a simple one-page service that shows
  # all the services' git-commit shas used to create their currently
  # running image. A generically routed service (eg avatars/creator)
  # does not need an explicit route here.

  location /custom-start-points/sha {
    rewrite ^/custom-start-points/sha /sha break;
    proxy_pass http://custom-start-points:4526;
  }
  location /exercises-start-points/sha {
    rewrite ^/exercises-start-points/sha /sha break;
    proxy_pass http://exercises-start-points:4525;
  }
  location /languages-start-points/sha {
    rewrite ^/languages-start-points/sha /sha break;
    proxy_pass http://languages-start-points:4524;
  }

  location /differ/sha {
    rewrite ^/differ/sha /sha break;
    proxy_pass http://differ:4567;
  }
  location /model/sha {
    rewrite ^/model/sha /sha break;
    proxy_pass http://model:4528;
  }
  location /repler/sha                 {
    rewrite ^/repler/sha /sha break;
    proxy_pass http://repler:4657;
  }
  location /runner/sha {
    rewrite ^/runner/sha /sha break;
    proxy_pass http://runner:4597;
  }
  location /saver/sha {
    rewrite ^/saver/sha /sha break;
    proxy_pass http://saver:4537;
  }
  location /shas {
    rewrite ^/shas/(.*) /$1 break;
    proxy_pass http://shas:4522;
  }

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # For everything else try a static file, otherwise try web.

  location /  {
    # An HTTP header important enough to have its own Wikipedia entry:
    # http://en.wikipedia.org/wiki/X-Forwarded-For
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # Help Rack set the proper protocol (eg https) for doing redirects:
    proxy_set_header X-Forwarded-Proto $scheme;

    # Pass the Host: header from the client right along so redirects
    # can be set properly within the Rack application
    proxy_set_header Host $http_host;

    # We don't want nginx trying to do something clever with
    # redirects, we set the Host: header above already.
    proxy_redirect off;

    # Try to serve static files from nginx.
    if (!-f $request_filename) {
      proxy_pass http://web:3000;
      break;
    }
  }

}
